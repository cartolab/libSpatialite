<project name="libSpatialite" default="generate-without-source-and-test" basedir=".">
    <description>
    	Users management and DB Connection extension
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="src-test" location="src-test"/>
  <property name="build" location="bin"/>
  <property name="build-test" location="bin-test"/>
  <property name="dist"  location="dist"/>
  <property name="extensionsDir" location="../_fwAndami/gvSIG/extensiones"/>
  <property name="mainplugin" value="com.iver.cit.gvsig"/>
  <property name="spatialitejar" value="sqlite_spatial"/>
  <property name="sqlitejar" value="sqlite"/>
  <property name="sqlitelibjar" value="sqlite-jdbc-3.7.15-SNAPSHOT"/>
  <property name="spatialiteliblin" value="libspatialite.so.3.2.0"/>
  <property name="spatialitelibwin" value="libspatialite-1.dll"/>
  <property name="charsetlibwin" value="libcharset1.dll"/>
  <property name="geoslibwin" value="libgeos-3-1-1.dll"/>
  <property name="geosclibwin" value="libgeos_c-1.dll"/>
  <property name="iconvlibwin" value="libiconv2.dll"/>
  <property name="projlibwin" value="libproj-0.dll"/>
  <property name="freexlliblin" value="libfreexl.so.1.0.0"/>
  <property name="geosliblin" value="libgeos-3.3.8.so"/>
  <property name="geoscliblin" value="libgeos_c.so.1.7.8"/>
  <property name="projliblin" value="libproj.so.0.7.0"/>
  <property name="plugin" value="es.udc.cartolab.gvsig.sqliteUsers"/>
  <property name="andami" location="../_fwAndami" />
  <property name="drivers-dir" location="${extensionsDir}/${mainplugin}/drivers" />
  <property name="lib-dir" location="${extensionsDir}/${mainplugin}/lib"/>
  <property name="lib" location="lib"/>
  <property name="compile-classpath" location=""/>
  <import file="../binaries/ant/utilities.xml" />
	
  <path id="junit.classpath">
    <pathelement location="../binaries/ant/gvsig-ant-junit.jar" />
    <pathelement location="${lib}/junit-4.11.jar" />
    <pathelement location="${lib}/hamcrest-core-1.3.jar" />
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}"/>

  </target>

	  <target name="generate-without-source-and-test"
	  	description="Generates the distribution without the source file and executes all the included tests"
	  	depends="generate-without-source, test" />

  <target name="generate-without-source"
  		description="generate the distribution without the source file">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
  	<mkdir dir="${dist}/lib"/>
  	  	
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
	<copy todir="${dist}/lib">
  	    	<fileset dir="lib" includes="*"/>
  	</copy>

  	<jar jarfile="${dist}/${spatialitejar}.jar" basedir="${build}"
  		includes="es/udc/cartolab/cit/gvsig/fmap/drivers/jdbc/spatialite/**"
  	/>

  	<jar jarfile="${dist}/${sqlitejar}.jar" basedir="${build}"
  		includes="es/udc/cartolab/com/hardcode/gdbms/driver/sqlite/**"
  	/>

    <mkdir dir="${drivers-dir}/jdbc_spatial"/>
  	<copy todir="${drivers-dir}/jdbc_spatial"  overwrite="true">
  		<fileset dir="${dist}" includes="${spatialitejar}.jar" />
 	</copy>

    <mkdir dir="${drivers-dir}/sqlite"/>
  	<copy todir="${drivers-dir}/sqlite"  overwrite="true">
  		<fileset dir="${dist}" includes="${sqlitejar}.jar" />
 	</copy>

    <copy todir="${lib-dir}/"  overwrite="true">
  		<fileset dir="${dist}" includes="${spatialitejar}.jar"/>
  		<fileset dir="${dist}" includes="${sqlitejar}.jar"/>
  	    <fileset dir="${lib}" includes="${sqlitelibjar}.jar"/>
  	    <fileset dir="${lib}" includes="${spatialiteliblin}"/>
  	  	<fileset dir="${lib}" includes="${spatialitelibwin}"/>
  	  	<fileset dir="${lib}" includes="${charsetlibwin}"/>
  	  	<fileset dir="${lib}" includes="${geoslibwin}"/>
  	  	<fileset dir="${lib}" includes="${geosclibwin}"/>
  	  	<fileset dir="${lib}" includes="${iconvlibwin}"/>
  	  	<fileset dir="${lib}" includes="${projlibwin}"/>
  	  	<fileset dir="${lib}" includes="${geosliblin}"/>
  	  	<fileset dir="${lib}" includes="${geoscliblin}"/>
  	  	<fileset dir="${lib}" includes="${freexlliblin}"/>
  	  	<fileset dir="${lib}" includes="${projliblin}"/>
    </copy>
  </target>


	<target name="compile" description="compile the source" >
		<!-- Compile the Java code from ${src} to ${build} -->
		<loadEclipseClasspath project="${basedir}" />
		<mkdir dir="${build}" />
		<echo>${eclipseClasspath}</echo>
		<javac  srcdir="${src}"
			destdir="${build}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			classpath="${eclipseClasspath}"
			includeantruntime="false"/>
	</target>


	<target name="compile-tests" description="compile the tests source" >
		<!-- Compile the Java code from ${src} to ${build} -->
		<loadEclipseClasspath project="${basedir}" />
		<mkdir dir="${build-test}" />
		<echo>${eclipseClasspath}</echo>
		<javac srcdir="${src-test}"
			destdir="${build-test}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			classpath="${eclipseClasspath}"
			includeantruntime="false"/>
	</target>

	<target name="copy-driver-to-andami">
	    <mkdir dir="${drivers-dir}/jdbc_spatial"/>
	  	<copy todir="${drivers-dir}/jdbc_spatial"  overwrite="true">
	  		<fileset dir="${dist}" includes="${spatialitejar}.jar" />
	 	</copy>

	    <mkdir dir="${drivers-dir}/sqlite"/>
	  	<copy todir="${drivers-dir}/sqlite"  overwrite="true">
	  		<fileset dir="${dist}" includes="${sqlitejar}.jar" />
	 	</copy>
	
	    <copy todir="${lib-dir}/"  overwrite="true">
	  		<fileset dir="${dist}" includes="${spatialitejar}.jar"/>
	  		<fileset dir="${dist}" includes="${sqlitejar}.jar"/>
	  	    <fileset dir="${lib}" includes="${sqlitelibjar}.jar"/>
	  	    <fileset dir="${lib}" includes="${spatialiteliblin}"/>
	  	  	<fileset dir="${lib}" includes="${spatialitelibwin}"/>
	  	  	<fileset dir="${lib}" includes="${charsetlibwin}"/>
	  	  	<fileset dir="${lib}" includes="${geoslibwin}"/>
	  	  	<fileset dir="${lib}" includes="${geosclibwin}"/>
	  	  	<fileset dir="${lib}" includes="${iconvlibwin}"/>
	  	  	<fileset dir="${lib}" includes="${projlibwin}"/>
	  	  	<fileset dir="${lib}" includes="${geosliblin}"/>
	  	  	<fileset dir="${lib}" includes="${geoscliblin}"/>
	  	  	<fileset dir="${lib}" includes="${freexlliblin}"/>
	  	  	<fileset dir="${lib}" includes="${projliblin}"/>
	    </copy>
	</target>


	<target name="clean"
	        description="clean up" >
	    <!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${dist}"/>
		<delete dir="${build}"/>
	</target>

	<target name="run-tests">
		<loadEclipseClasspath project="${basedir}" />
		<junit printsummary="on" filtertrace="off">
		  <classpath refid="junit.classpath"/>
		  <classpath>
		  	<pathelement path="${build-test}"/>
		  	<pathelement path="${build}"/>
		  	<pathelement path="${eclipseClasspath}"/>
		  </classpath>
			<test name="es.udc.cartolab.cit.gvsig.fmap.drivers.jdbc.spatialite.test.TestSuite"/>
			<!-- Formatter for printing all outputs --> 
			<!-- <formatter
		    type="brief"
		    usefile="false"
		    /> -->
		</junit>
	</target>

	<target name="test" depends="compile-tests, run-tests"/>
</project>

